<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.demo.ProductServiceTest" tests="11" skipped="0" failures="1" errors="0" timestamp="2025-02-19T16:04:24" hostname="PIYUSH-GARG" time="0.22">
  <properties/>
  <testcase name="deleteProductTest_NotFound()" classname="com.example.demo.ProductServiceTest" time="0.165"/>
  <testcase name="updateProductTest_OnSuccess_OUT_OF_STOCK()" classname="com.example.demo.ProductServiceTest" time="0.008"/>
  <testcase name="updateProductTest_OnSuccess_IN_STOCK()" classname="com.example.demo.ProductServiceTest" time="0.004"/>
  <testcase name="addProductTest_IN_STOCK()" classname="com.example.demo.ProductServiceTest" time="0.004"/>
  <testcase name="addProductTest_AVAILABLE_SOON()" classname="com.example.demo.ProductServiceTest" time="0.004"/>
  <testcase name="deleteProductTest_OnSuccess()" classname="com.example.demo.ProductServiceTest" time="0.003"/>
  <testcase name="UpdateProductTest_NotFound()" classname="com.example.demo.ProductServiceTest" time="0.003"/>
  <testcase name="updateProductTest_OnSuccess_AVAILABLE_SOON()" classname="com.example.demo.ProductServiceTest" time="0.012">
    <failure message="java.lang.AssertionError: expectation &quot;expectNext(ProdInventoryDTO(product=Product(id=2, name=HP ProBook, description=HP Probook Laptop with Intel I5, price=1332.34), StockCount=-1, StockStatus=AVAILABLE_SOON))&quot; failed (expected value: ProdInventoryDTO(product=Product(id=2, name=HP ProBook, description=HP Probook Laptop with Intel I5, price=1332.34), StockCount=-1, StockStatus=AVAILABLE_SOON); actual value: ProdInventoryDTO(product=Product(id=3, name=HP IdeaPad Laptop, description=HP IdeaPad Laptop with Intel I5, price=2332.34), StockCount=-1, StockStatus=AVAILABLE_SOON))" type="java.lang.AssertionError">java.lang.AssertionError: expectation &quot;expectNext(ProdInventoryDTO(product=Product(id=2, name=HP ProBook, description=HP Probook Laptop with Intel I5, price=1332.34), StockCount=-1, StockStatus=AVAILABLE_SOON))&quot; failed (expected value: ProdInventoryDTO(product=Product(id=2, name=HP ProBook, description=HP Probook Laptop with Intel I5, price=1332.34), StockCount=-1, StockStatus=AVAILABLE_SOON); actual value: ProdInventoryDTO(product=Product(id=3, name=HP IdeaPad Laptop, description=HP IdeaPad Laptop with Intel I5, price=2332.34), StockCount=-1, StockStatus=AVAILABLE_SOON))
	at reactor.test.MessageFormatter.assertionError(MessageFormatter.java:115)
	at reactor.test.MessageFormatter.failPrefix(MessageFormatter.java:104)
	at reactor.test.MessageFormatter.fail(MessageFormatter.java:73)
	at reactor.test.MessageFormatter.failOptional(MessageFormatter.java:88)
	at reactor.test.DefaultStepVerifierBuilder.lambda$addExpectedValue$10(DefaultStepVerifierBuilder.java:512)
	at reactor.test.DefaultStepVerifierBuilder$SignalEvent.test(DefaultStepVerifierBuilder.java:2289)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onSignal(DefaultStepVerifierBuilder.java:1529)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onExpectation(DefaultStepVerifierBuilder.java:1477)
	at reactor.test.DefaultStepVerifierBuilder$DefaultVerifySubscriber.onNext(DefaultStepVerifierBuilder.java:1146)
	at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
	at reactor.core.publisher.MonoFlatMap$FlatMapInner.onSubscribe(MonoFlatMap.java:291)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:63)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)
	at reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2571)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)
	at reactor.core.publisher.Operators$MultiSubscriptionSubscriber.onSubscribe(Operators.java:2241)
	at reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)
	at reactor.core.publisher.FluxFlatMap.trySubscribeScalarMap(FluxFlatMap.java:193)
	at reactor.core.publisher.MonoFlatMap.subscribeOrReturn(MonoFlatMap.java:53)
	at reactor.core.publisher.Mono.subscribe(Mono.java:4560)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.toVerifierAndSubscribe(DefaultStepVerifierBuilder.java:891)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:831)
	at reactor.test.DefaultStepVerifierBuilder$DefaultStepVerifier.verify(DefaultStepVerifierBuilder.java:823)
	at reactor.test.DefaultStepVerifierBuilder.verifyComplete(DefaultStepVerifierBuilder.java:690)
	at com.example.demo.ProductServiceTest.updateProductTest_OnSuccess_AVAILABLE_SOON(ProductServiceTest.java:201)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
</failure>
  </testcase>
  <testcase name="getProductByIdTest()" classname="com.example.demo.ProductServiceTest" time="0.005"/>
  <testcase name="getAllProductTest()" classname="com.example.demo.ProductServiceTest" time="0.006"/>
  <testcase name="addProductTest_OUT_OF_STOCK()" classname="com.example.demo.ProductServiceTest" time="0.003"/>
  <system-out><![CDATA[2025-02-19T21:34:24.995+05:30  WARN 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Product associated with Id:1 removed from Products collection
2025-02-19T21:34:25.012+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Updated the Product Details associated with Id : 2 in a Product collection
2025-02-19T21:34:25.015+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Updating Product into Inventory throught WebClient
2025-02-19T21:34:25.018+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Updated the Product Details associated with Id : 1 in a Product collection
2025-02-19T21:34:25.019+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Updating Product into Inventory throught WebClient
2025-02-19T21:34:25.023+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Adding the Product with Name:IPhone13 in a Products Collection
2025-02-19T21:34:25.024+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Adding Product to Inventory throught WebClient
2025-02-19T21:34:25.027+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Adding the Product with Name:HP ProBook in a Products Collection
2025-02-19T21:34:25.028+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Adding Product to Inventory throught WebClient
2025-02-19T21:34:25.032+05:30  WARN 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Product associated with Id:1 removed from Products collection
2025-02-19T21:34:25.036+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Updated the Product Details associated with Id : 1 in a Product collection
2025-02-19T21:34:25.039+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Updated the Product Details associated with Id : 3 in a Product collection
2025-02-19T21:34:25.040+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Updating Product into Inventory throught WebClient
2025-02-19T21:34:25.052+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Fetching Product associated with Id : 1
2025-02-19T21:34:25.062+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Adding the Product with Name:HP ProBook in a Products Collection
2025-02-19T21:34:25.062+05:30  INFO 15672 --- [Product_manage] [    Test worker] c.example.demo.services.ProductServices  : Adding Product to Inventory throught WebClient
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
